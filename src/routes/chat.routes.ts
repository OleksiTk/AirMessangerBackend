// src/routes/chat.routes.ts
import express from "express";
import { authMiddleware } from "../middlewares/authMiddleware";
import { chatController } from "../controllers/chatController";
import multer from "multer";
import path from "path";
import fs from "fs";
const router = express.Router();
const ensureDirExists = (dir: string) => {
  if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
};

/** üß± 2. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è multer */
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    // –î–∏–Ω–∞–º—ñ—á–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –ø–∞–ø–∫—É
    let folder = "others";
    if (file.mimetype.startsWith("image/")) folder = "images";
    else if (
      file.mimetype === "application/pdf" ||
      file.mimetype.includes("word") ||
      file.mimetype.includes("officedocument")
    )
      folder = "docs";
    else if (file.mimetype.startsWith("text/")) folder = "texts";

    const uploadPath = path.join("uploads", folder);
    ensureDirExists(uploadPath);
    cb(null, uploadPath);
  },
  filename: (req, file, cb) => {
    // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º‚Äô—è —Ñ–∞–π–ª—É
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    const ext = path.extname(file.originalname);
    cb(null, `${uniqueSuffix}${ext}`);
  },
});

const upload = multer({ storage });
router.get("/", authMiddleware, chatController.getChatByProfileName);
router.post(
  "/",
  authMiddleware,
  upload.single("file"),
  chatController.upLoadFile
);
// ‚úÖ –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ä–æ—É—Ç–∏ –ü–ï–†–ï–î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–∏–º–∏
router.get("/my-chats", authMiddleware, chatController.getUserChats);
router.get("/:chatId/messages", authMiddleware, chatController.getChatMessages);
router.post("/:chatId/message", authMiddleware, chatController.sendMessage);

// ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–∏–π —Ä–æ—É—Ç –í –ö–Ü–ù–¶–Ü
// –¢–†–ï–ë–ê –ù–ï –ó–ê–ë–£–¢–ò –î–û–î–ê–¢–ò –ü–ï–†–ï–í–Ü–†–ö–£ –ù–ê –¢–û–ö–ï–ù
export default router;
